<FDM_CONFIG NAME="Space Shuttle" VERSION="1.60">

  <!--
  File:        shuttle.xml
  Author:      Jon S. Berndt
  CVS Version: $Id$

  Function: Models the U.S. Space Shuttle
  Notes:    Try running FlightGear using this command line,
            fgfs --fdm=jsb --aircraft=shuttle --altitude=60000 --uBody=3000 --wBody=120
  -->

  <METRICS>

    <!--
    Center of gravity location, empty weight, in aircraft's own structural coord
    system. X, Y, Z, in inches; X is positive out the tail, Y positive out the
    right wing.

    Pilot's eyepoint location, in aircraft's own coord system, FROM cg.
    X, Y, Z, in inches
    -->

    AC_WINGAREA 2690
    AC_WINGSPAN 78
    AC_CHORD    39.6
    AC_IXX      953159
    AC_IYY      7465084
    AC_IZZ      7747582
    AC_IXZ      -140307
    AC_EMPTYWT  231300
    AC_CGLOC    1080  0    373
    AC_EYEPTLOC 498  -22   469
    AC_AERORP   1074  0    373

  </METRICS>

  <UNDERCARRIAGE>

    <!--
    the gear parameters that can be specified are as follows, IN ORDER OF APPEARANCE:

    AC_GEAR
    <name>                           name of gear entry - no spaces allowed
    <X> <Y> <Z>                      Gear location in aircraft body coords in inches
    <spring constant>                spring constant in lbs/ft
    <damping coefficient>            damping coefficient in lbs/ft/sec
    <dynamic friction coefficient>   Self-explanatory: sliding friction coefficient
    <static friction coefficient>    Self-explanatory: "onset" friction coefficient
    <rolling resistance coefficient> Self-explanatory: rolling resistance coefficient
    <steerability attribute>         One of <STEERABLE | FIXED | CASTERED>
    <brake group membership>         One of <LEFT | CENTER | RIGHT | NOSE | TAIL | NONE>
    <max steer angle>                Maximum steerable angle in degrees
    -->

    AC_GEAR     NOSE         375    0 225 150000  10000  0.02  0.5 0.02 STEERABLE NOSE 15 FIXED
    AC_GEAR     LEFT_WHEEL  1172 -136 171 150000  10000  0.02  0.5 0.02 FIXED LEFT 0 FIXED
    AC_GEAR     RIGHT_WHEEL 1172  136 171 150000  10000  0.02  0.5 0.02 FIXED RIGHT 0 FIXED

  </UNDERCARRIAGE>

  <PROPULSION>

    <!--
      Not modeling any propulsive forces yet
    -->

  </PROPULSION>

  <!--
  In the following section for flight controls the TYPE parameter may be one of
  the following:

    LAG_FILTER
    LEAD_LAG_FILTER
    SECOND_ORDER_FILTER
    WASHOUT_FILTER
    INTEGRATOR
    PURE_GAIN
    SCHEDULED_GAIN
    HYSTERESIS
    SUMMER
    DEADBAND
    GRADIENT
    AEROSURFACE_SCALE

  Most flight control systems should be able to be modeled by the above
  components.

  According to Etkin, (From the Flight Safety Foundation Human Engineering
  Bulletin 56-5H) the stick and rudder forces a pilot may be expected to apply
  are as follows (averaged, for a right-handed pilot):

  Stick Pull:  50 lbs.
        Push:  50
        Right: 20
        Left:  20

  Pedal Push: 300 lbs.

  It is assumed that most flight control systems will list the pilot input in
  pounds force (or the metric equivalent). It is also assumed that the aerosurfaces
  will all have limits specified, and that the joystick inputs from FlightGear will be
  from -1 to 0 to +1. Given all those parameters, it should be possible to
  calculate a scaling factor that will convert the +/-1 range into a push/pull
  force command ready for input to the FCS.

  The MAX and MIN pilot input forces in AEROSURFACE_SCALE types below are given in
  pounds.
  -->

  <FLIGHT_CONTROL NAME="X-15 SAS">

    <COMPONENT NAME="Pitch Trim Sum" TYPE="SUMMER">
       INPUT        fcs/elevator-cmd-norm
       INPUT        fcs/pitch-trim-cmd-norm
       CLIPTO       -1 1
    </COMPONENT>

    <COMPONENT NAME="Pitch Command Scale" TYPE="AEROSURFACE_SCALE">
      INPUT        fcs/pitch-trim-sum
      MIN         -50
      MAX          50
    </COMPONENT>

    <COMPONENT NAME="Pitch Gain 1" TYPE="PURE_GAIN">
      INPUT        fcs/pitch-command-scale
      GAIN         -0.36
    </COMPONENT>

    <!--
      In the following component, the GAIN value is actually in addition to the
      scheduled gain in the next component. If the GAIN in a scheduled component
      is not required, it may be ignored and not specified here - it is initialized
      to one in the contructor.
    -->

    <COMPONENT NAME="Pitch Scheduled Gain 1" TYPE="SCHEDULED_GAIN">
      INPUT        fcs/pitch-gain-1
      GAIN         0.017
      ROWS         22
      SCHEDULED_BY fcs/elevator-pos-rad
      -0.68  -26.548
      -0.595 -20.513
      -0.51  -15.328
      -0.425 -10.993
      -0.34   -7.508
      -0.255  -4.873
      -0.17   -3.088
      -0.085  -2.153
       0      -2.068
       0.085  -2.833
       0.102  -3.088
       0.119  -3.377
       0.136  -3.7
       0.153  -4.057
       0.17   -4.448
       0.187  -4.873
       0.272  -7.508
       0.357 -10.993
       0.442 -15.328
       0.527 -20.513
       0.612 -26.548
       0.697 -33.433
    </COMPONENT>

    <COMPONENT NAME="Roll Command Scale" TYPE="AEROSURFACE_SCALE">
      INPUT        fcs/aileron-cmd-norm
      MIN         -20
      MAX          20
    </COMPONENT>

    <COMPONENT NAME="Roll Gain 1" TYPE="PURE_GAIN">
      INPUT        fcs/roll-command-scale
      GAIN         0.42
    </COMPONENT>

    <COMPONENT NAME="Roll Gain 2" TYPE="PURE_GAIN">
      INPUT        fcs/roll-gain-1
      GAIN         0.027
    </COMPONENT>

    <COMPONENT NAME="Yaw Command Scale" TYPE="AEROSURFACE_SCALE">
      INPUT        fcs/rudder-cmd-norm
      MIN         -250
      MAX          250
    </COMPONENT>

    <COMPONENT NAME="Yaw Gain 1" TYPE="PURE_GAIN">
      INPUT        fcs/yaw-command-scale
      GAIN         0.082
    </COMPONENT>

    <COMPONENT NAME="Yaw Gain 2" TYPE="PURE_GAIN">
      INPUT        fcs/yaw-gain-1
      GAIN         0.040
    </COMPONENT>

    <COMPONENT NAME="Pitch SAS Feedback" TYPE="PURE_GAIN">
      INPUT        velocities/q-rad_sec
      GAIN         0.75
    </COMPONENT>

    <COMPONENT NAME="Yaw-Roll Crossover Gain" TYPE="PURE_GAIN">
      INPUT        velocities/r-rad_sec
      GAIN         -0.90
    </COMPONENT>

    <COMPONENT NAME="Yaw Coupled Aileron Feedback Sum" TYPE="SUMMER">
      INPUT        velocities/p-rad_sec
      INPUT        fcs/yaw-roll-crossover-gain
    </COMPONENT>

    <COMPONENT NAME="Roll SAS Gain" TYPE="PURE_GAIN">
      INPUT        fcs/yaw-coupled-aileron-feedback-sum
      GAIN         -0.50
    </COMPONENT>

    <COMPONENT NAME="Yaw SAS Gain" TYPE="PURE_GAIN">
      INPUT        velocities/r-rad_sec
      GAIN         0.30
    </COMPONENT>

    <COMPONENT NAME="Elevator Positioning" TYPE="SUMMER">
      INPUT         fcs/pitch-scheduled-gain-1
      INPUT        fcs/pitch-sas-feedback
      CLIPTO       -0.26 0.61
    </COMPONENT>

    <COMPONENT NAME="Elevator Filter" TYPE="LAG_FILTER">
      INPUT        fcs/elevator-positioning
      C1           600
      OUTPUT       fcs/elevator-pos-rad
    </COMPONENT>

    <COMPONENT NAME="Aileron Positioning" TYPE="SUMMER">
      INPUT         fcs/roll-gain-2
      INPUT        fcs/roll-sas-gain
      OUTPUT       fcs/left-aileron-pos-rad
      CLIPTO       -0.35 0.35
    </COMPONENT>

    <COMPONENT NAME="Rudder Positioning" TYPE="SUMMER">
      INPUT         fcs/yaw-gain-2
      INPUT        fcs/yaw-sas-gain
      OUTPUT       fcs/rudder-pos-rad
      CLIPTO       -0.52 0.52
    </COMPONENT>

  </FLIGHT_CONTROL>

  <AERODYNAMICS>

    <!--
    For Multiplier parameter identifiers, see the definition for enum eParam in FGDefs.h

    The aerodynamics section is arranged as follows:

     <AERODYNAMICS>
       <AXIS NAME="LIFT">                   // {LIFT|DRAG|SIDE|ROLL|PITCH|YAW}

         <COEFFICIENT NAME="CLalpha" TYPE="VECTOR">   // example for CLalpha

           Lift_due_to_alpha                // e.g. Lift_at_zero_alpha (no embedded spaces)
           [[rows] cols]                    // calc_type: {TABLE|VECTOR|TABLE|EQUATION}
                                            // number of rows and number of columns
                                            // are present depending on calc_type
           row_lookup column_lookup         // the lookup parameters for row and column
                                            // based on the above chart, i.e. if the
                                            // row and column lookups are 16384 &
                                            // 32768 that means the rows are indexed
                                            // by mach and the columns by altitude
                                            // if the type is VECTOR, then the table
                                            // is referenced only by a single lookup.
           multipliers                      // this is an OR'ed value of all the
                                            // parameters this coefficient must be
                                            // multiplied by to get a force or moment,
                                            // i.e., these are the non-dimensionalizing
                                            // values. Alternatively, the values can
                                            // be given as the FG_* descriptors
                                            // delimited with the "|" pipe character.
           column_value                     // if a TABLE, the row values for _this_
                                            // column follow. I.e., if the column
                                            // represents altitude and this value is
                                            // 40,000, then what follows are the rows
                                            // of data for this coefficient at this
                                            // altitude
           row_value coeff_value            // The actual value for the data at this
                                            // row, where for instance, 0.0 might
                                            // a mach number of 0; and the second value
                                            // represents the coefficient value for
                                            // this column at this row. Using the
                                            // example mentioned: 2.4 0.98 would mean,
                                            // for this column of data and at mach 2.4,
                                            // the value of the coefficient is 0.98.
           <...> <...>                      // a <row> <coeff> value entry is present
                                            // each row of data. ADDITIONALLY, for each
                                            // column, the row_value series must be
                                            // identical.
           column_value2                    // repeat row/coeff value mapping for
           row_value coeff_value            // each column in the table
            ,...> <...>                      //
           </COEFFICIENT>

         </AXIS>
    -->

    <AXIS NAME="LIFT">

      <COEFFICIENT NAME="CLalpha" TYPE="VALUE">
        Lift_due_to_alpha
        aero/qbar-psf | metrics/Sw-sqft | aero/alpha-rad
	      6.0
      </COEFFICIENT>

      <COEFFICIENT NAME="CLDe" TYPE="VECTOR">
        Lift_due_to_Elevator_Deflection
        11
        velocities/mach-norm
        aero/qbar-psf | metrics/Sw-sqft | fcs/elevator-pos-rad
        0.0 1.00
        0.6 1.05
        1.0 1.15
        1.2 1.00
        1.6 0.66
        2.0 0.50
        2.4 0.40
        3.0 0.31
        5.6 0.21
        6.0 0.20
        9.0 0.20
      </COEFFICIENT>

    </AXIS>

    <AXIS NAME="DRAG">

      <COEFFICIENT NAME="CDmin" TYPE="VALUE">
        Drag_minimum
        aero/qbar-psf | metrics/Sw-sqft
        0.061
      </COEFFICIENT>

      <COEFFICIENT NAME="CDi" TYPE="VECTOR">
        Drag_induced
        10
        velocities/mach-norm
        aero/qbar-psf | metrics/Sw-sqft | aero/cl-squared-norm
        0.0 0.20
        0.5 0.20
        1.0 0.23
        1.5 0.40
        2.0 0.50
        3.0 0.80
        4.0 0.93
        5.0 1.05
        6.0 1.15
        9.0 1.33
      </COEFFICIENT>

    </AXIS>

    <AXIS NAME="SIDE">

      <COEFFICIENT NAME="CYb" TYPE="VALUE">
        Side_force_due_to_beta
        aero/qbar-psf | metrics/Sw-sqft | aero/beta-rad
        -1.4
      </COEFFICIENT>

      <COEFFICIENT NAME="CYda" TYPE="VALUE">
        Side_force_due_to_aileron
        aero/qbar-psf | metrics/Sw-sqft | fcs/left-aileron-pos-rad
        -0.05
      </COEFFICIENT>

      <COEFFICIENT NAME="CYdr" TYPE="VALUE">
        Side_force_due_to_rudder
        aero/qbar-psf | metrics/Sw-sqft | fcs/rudder-pos-rad
        0.45
      </COEFFICIENT>

    </AXIS>

    <AXIS NAME="ROLL">

      <COEFFICIENT NAME="Clb" TYPE="VALUE">
        Roll_moment_due_to_beta
        aero/qbar-psf | metrics/Sw-sqft | metrics/bw-ft | aero/beta-rad
        -0.01
      </COEFFICIENT>

      <COEFFICIENT NAME="Clp" TYPE="VALUE">
        Roll_moment_due_to_roll_rate_(roll_damping)
        aero/qbar-psf | metrics/Sw-sqft | metrics/bw-ft | aero/bi2vel | velocities/p-rad_sec
        -0.35
      </COEFFICIENT>

      <COEFFICIENT NAME="Clr" TYPE="VALUE">

        Roll_moment_due_to_yaw_rate
        aero/qbar-psf | metrics/Sw-sqft | metrics/bw-ft | aero/bi2vel | velocities/r-rad_sec
        0.04
      </COEFFICIENT>

      <COEFFICIENT NAME="Clda" TYPE="TABLE">
        Roll_moment_due_to_aileron
        8 2
        velocities/mach-norm position/h-sl-ft
        aero/qbar-psf | metrics/Sw-sqft | metrics/bw-ft | fcs/left-aileron-pos-rad
             0.0   80000
        0.0  0.05  0.05
        0.4  0.07  0.05
        0.6  0.08  0.05
        1.0  0.11  0.05
        1.4  0.08  0.06
        1.6  0.07  0.06
        2.4  0.06  0.05
        6.0  0.03  0.02
      </COEFFICIENT>

      <COEFFICIENT NAME="Cldr" TYPE="VALUE">
        Roll_moment_due_to_rudder
        aero/qbar-psf | metrics/Sw-sqft | metrics/bw-ft | fcs/rudder-pos-rad
        0.012
      </COEFFICIENT>

    </AXIS>

    <AXIS NAME="PITCH">

      <COEFFICIENT NAME="Cmalpha" TYPE="VALUE">
        Pitch_moment_due_to_alpha
        aero/qbar-psf | metrics/Sw-sqft | metrics/cbarw-ft | aero/alpha-rad
        -1.2
      </COEFFICIENT>

      <COEFFICIENT NAME="Cmq" TYPE="VALUE">
        Pitch_moment_due_to_pitch_rate
        aero/qbar-psf | metrics/Sw-sqft | metrics/cbarw-ft | aero/ci2vel | velocities/q-rad_sec
        -6.2
      </COEFFICIENT>

      <COEFFICIENT NAME="Cmadot" TYPE="VALUE">
        Pitch_moment_due_to_alpha_rate
        aero/qbar-psf | metrics/Sw-sqft | metrics/cbarw-ft | aero/ci2vel | aero/alphadot-rad_sec
        0.0
      </COEFFICIENT>

      <COEFFICIENT NAME="CmM" TYPE="TABLE">
        Pitch_moment_due_to_Mach
        10 4
        velocities/mach-norm position/h-sl-ft
        aero/qbar-psf | metrics/Sw-sqft | metrics/cbarw-ft | velocities/mach-norm
              0.00  40000  60000  80000
        0.00  0.00   0.00   0.00   0.00
        0.60  0.00  -0.01  -0.01   0.00
        0.80  0.00  -0.13  -0.13   0.00
        1.00  0.00  -0.11  -0.18   0.00
        1.10  0.00  -0.16  -0.18   0.00
        1.20  0.00  -0.25  -0.17   0.00
        1.40  0.00  -0.06  -0.15   0.00
        1.70  0.00  -0.03  -0.03   0.00
        2.00  0.00  -0.01  -0.01   0.00
        9.00  0.00   0.00   0.00   0.00
      </COEFFICIENT>

      <!--
        Cmde comes from Shuttle Flight Ops Manual Volume 11, pg 52
        -->

      <COEFFICIENT NAME="Cmde" TYPE="VECTOR">
        Pitch_moment_due_to_elevator_deflection
        4
        velocities/mach-norm
        aero/qbar-psf | metrics/Sw-sqft | metrics/cbarw-ft | fcs/elevator-pos-rad
        0.00 -0.520
        0.25 -0.520
        2.00 -0.190
        8.00 -0.037
      </COEFFICIENT>

    </AXIS>

    <AXIS NAME="YAW">

      <COEFFICIENT NAME="Cnb" TYPE="VALUE">
        Yaw_moment_due_to_beta
        aero/qbar-psf | metrics/Sw-sqft | metrics/bw-ft | aero/beta-rad
        0.5
      </COEFFICIENT>

      <COEFFICIENT NAME="Cnp" TYPE="VALUE">
        Yaw_moment_due_to_roll_rate
        aero/qbar-psf | metrics/Sw-sqft | metrics/bw-ft | aero/bi2vel | velocities/p-rad_sec
        0.0
      </COEFFICIENT>

      <COEFFICIENT NAME="Cnr" TYPE="VALUE">
        Yaw_moment_due_to_yaw_rate
        aero/qbar-psf | metrics/Sw-sqft | metrics/bw-ft | aero/bi2vel | velocities/r-rad_sec
        -1.5
      </COEFFICIENT>

      <COEFFICIENT NAME="Cnda" TYPE="VALUE">
        Yaw_moment_due_to_aileron
        aero/qbar-psf | metrics/Sw-sqft | metrics/bw-ft | fcs/left-aileron-pos-rad
        0.04
      </COEFFICIENT>

      <COEFFICIENT NAME="Cndr" TYPE="VALUE">
        Yaw_moment_due_to_rudder
        aero/qbar-psf | metrics/Sw-sqft | metrics/bw-ft | fcs/rudder-pos-rad
        -0.3
      </COEFFICIENT>

    </AXIS>

  </AERODYNAMICS>

  <!--
    OUTPUT section definition

    The following specifies the way that JSBSim writes out data.

    NAME is the filename you want the output to go to

    TYPE can be:
      CSV       Comma separated data. If a filename is supplied then the data
                goes to that file. If COUT or cout is specified, the data goes
                to stdout. If the filename is a null filename the data goes to
                stdout, as well.
      SOCKET    Will eventually send data to a socket output, where NAME
                would then be the IP address of the machine the data should be
                sent to. DON'T USE THIS YET!
      TABULAR   Columnar data. NOT IMPLEMENTED YET!
      TERMINAL  Output to terminal. NOT IMPLEMENTED YET!
      NONE      Specifies to do nothing. THis setting makes it easy to turn on and
                off the data output without having to mess with anything else.

    The arguments that can be supplied, currently, are

    RATE_IN_HZ  An integer rate in times-per-second that the data is output. This
                value may not be *exactly* what you want, due to the dependence
                on dt, the cycle rate for the FDM.

    The following parameters tell which subsystems of data to output:

    SIMULATION       ON|OFF
    ATMOSPHERE       ON|OFF
    MASSPROPS        ON|OFF
    AEROSURFACES     ON|OFF
    RATES            ON|OFF
    VELOCITIES       ON|OFF
    FORCES           ON|OFF
    MOMENTS          ON|OFF
    POSITION         ON|OFF
    COEFFICIENTS     ON|OFF
    GROUND_REACTIONS ON|OFF
    FCS              ON|OFF
    PROPULSION       ON|OFF

    NOTE that Time is always output with the data.
  -->

  <OUTPUT NAME="JSBout.csv" TYPE="NONE">
    RATE_IN_HZ       5
    SIMULATION       ON
    ATMOSPHERE       ON
    MASSPROPS        ON
    AEROSURFACES     ON
    RATES            ON
    VELOCITIES       ON
    FORCES           ON
    MOMENTS          ON
    POSITION         ON
    COEFFICIENTS     ON
    GROUND_REACTIONS ON
    FCS              ON
    PROPULSION       ON
  </OUTPUT>

</FDM_CONFIG>

